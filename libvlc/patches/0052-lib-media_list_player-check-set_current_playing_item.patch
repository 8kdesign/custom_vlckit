From c37a1ad0744d11b57dcacdf4c32a2fb34199506f Mon Sep 17 00:00:00 2001
From: Thomas Guillem <thomas@gllm.fr>
Date: Wed, 17 May 2023 08:39:59 +0200
Subject: [PATCH 52/53] lib: media_list_player: check set_current_playing_item()
 return
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This will allow to fix a leak by only checking the return code instead
of fetching the media (and forgetting to release it...)

Backport of 2ca93e26.

Signed-off-by: Felix Paul KÃ¼hne <felix@feepk.net>
---
 lib/media_list_player.c | 25 ++++++++++++++-----------
 1 file changed, 14 insertions(+), 11 deletions(-)

diff --git a/lib/media_list_player.c b/lib/media_list_player.c
index accb81a40c..e060ae553b 100644
--- a/lib/media_list_player.c
+++ b/lib/media_list_player.c
@@ -437,7 +437,7 @@ uninstall_media_player_observer(libvlc_media_list_player_t * p_mlp)
  *
  * Playlist lock should be held
  **************************************************************************/
-static void
+static int
 set_current_playing_item(libvlc_media_list_player_t * p_mlp, libvlc_media_list_path_t path)
 {
     assert_locked(p_mlp);
@@ -450,12 +450,12 @@ set_current_playing_item(libvlc_media_list_player_t * p_mlp, libvlc_media_list_p
     }
 
     if (!path)
-        return;
+        return -1;
 
     libvlc_media_t * p_md;
     p_md = libvlc_media_list_item_at_path(p_mlp->p_mlist, path);
     if (!p_md)
-        return;
+        return -1;
 
     /* Make sure media_player_reached_end() won't get called */
     uninstall_media_player_observer(p_mlp);
@@ -464,6 +464,8 @@ set_current_playing_item(libvlc_media_list_player_t * p_mlp, libvlc_media_list_p
 
     install_media_player_observer(p_mlp);
     libvlc_media_release(p_md); /* for libvlc_media_list_item_at_index */
+
+    return 0;
 }
 
 /*
@@ -691,8 +693,8 @@ int libvlc_media_list_player_play_item_at_index(libvlc_media_list_player_t * p_m
 {
     lock(p_mlp);
     libvlc_media_list_path_t path = libvlc_media_list_path_with_root_index(i_index);
-    set_current_playing_item(p_mlp, path);
     libvlc_media_t *p_md = libvlc_media_player_get_media(p_mlp->p_mi);
+    int ret = set_current_playing_item(p_mlp, path);
     libvlc_media_player_play(p_mlp->p_mi);
     unlock(p_mlp);
 
@@ -705,7 +707,7 @@ int libvlc_media_list_player_play_item_at_index(libvlc_media_list_player_t * p_m
     event.u.media_list_player_next_item_set.item = p_md;
     libvlc_event_send(&p_mlp->event_manager, &event);
     libvlc_media_release(p_md);
-    return 0;
+    return ret;
 }
 
 /**************************************************************************
@@ -722,10 +724,10 @@ int libvlc_media_list_player_play_item(libvlc_media_list_player_t * p_mlp, libvl
         return -1;
     }
 
-    set_current_playing_item(p_mlp, path);
+    int ret = set_current_playing_item(p_mlp, path);
     libvlc_media_player_play(p_mlp->p_mi);
     unlock(p_mlp);
-    return 0;
+    return ret;
 }
 
 /**************************************************************************
@@ -784,6 +786,7 @@ static int set_relative_playlist_position_and_play(
 
     libvlc_media_list_path_t path = p_mlp->current_playing_item_path;
 
+    int ret;
     if(p_mlp->e_playback_mode != libvlc_playback_mode_repeat)
     {
         bool b_loop = (p_mlp->e_playback_mode == libvlc_playback_mode_loop);
@@ -791,20 +794,20 @@ static int set_relative_playlist_position_and_play(
         while (i_relative_position > 0)
         {
             path = get_next_path(p_mlp, b_loop);
-            set_current_playing_item(p_mlp, path);
+            ret = set_current_playing_item(p_mlp, path);
             --i_relative_position;
         }
 
         while (i_relative_position < 0)
         {
             path = get_previous_path(p_mlp, b_loop);
-            set_current_playing_item(p_mlp, path);
+            ret = set_current_playing_item(p_mlp, path);
             ++i_relative_position;
         }
     }
     else
     {
-        set_current_playing_item(p_mlp, path);
+        ret = set_current_playing_item(p_mlp, path);
     }
 
 #ifdef DEBUG_MEDIA_LIST_PLAYER
@@ -812,7 +815,7 @@ static int set_relative_playlist_position_and_play(
     libvlc_media_list_path_dump(path);
 #endif
 
-    if (!path)
+    if (!path || ret != 0)
     {
         libvlc_media_list_unlock(p_mlp->p_mlist);
         /* Send list played event */
-- 
2.39.2 (Apple Git-143)

